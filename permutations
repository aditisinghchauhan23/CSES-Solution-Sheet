A permutation of integers 1,2,\ldots,n is called beautiful if there are no adjacent elements whose difference is 1.
Given n, construct a beautiful permutation if such a permutation exists.
Input
The only input line contains an integer n.
Output
Print a beautiful permutation of integers 1,2,\ldots,n. If there are several solutions, you may print any of them. If there are no solutions, print "NO SOLUTION".

#include <iostream>
#include <vector>
#include <string>

using namespace std;

string beautiful_permutation(int n) {
    if (n == 1) {
        return "1";
    } else if (n < 4) {
        return "NO SOLUTION";
    } else {
        string result = "";
        
        for (int i = 2; i <= n; i += 2) {
            result += to_string(i) + " ";
        }
        
        for (int i = 1; i <= n; i += 2) {
            result += to_string(i);
            if (i < n - 1 || n % 2 == 0) {
                result += " ";
            }
        }
        
        return result;
    }
}

int main() {
    int n;
    cin >> n;
    
    string result = beautiful_permutation(n);
    cout << result << endl;
    
    return 0;
}
